#BlueJ class context
comment0.params=
comment0.target=Board()
comment1.params=p\ spot
comment1.target=void\ addPiece(Piece,\ OrderedPair)
comment10.params=m
comment10.target=boolean\ isValidMove(Move)
comment11.params=m
comment11.target=void\ movePiece(Move)
comment12.params=t
comment12.target=java.util.ArrayList\ getAllValidMoves(Team)
comment13.params=t
comment13.target=java.util.ArrayList\ getAllValidEnPassants(Team)
comment14.params=t
comment14.target=java.util.ArrayList\ getAllValidCastles(Team)
comment15.params=t
comment15.target=OrderedPair\ getKingSpot(Team)
comment16.params=t
comment16.target=boolean\ isInCheck(Team)
comment16.text=\r\n\ To\ be\ used\ to\ check\ if\ a\ player\ is\ in\ check\r\n
comment17.params=
comment17.target=Board\ clone()
comment17.text=\r\n\ Add\ a\ thing\ to\ clone\ the\ graveyards\ of\ both\ sides???????????????????????????????????????????\r\n
comment18.params=t
comment18.target=boolean\ isInCheckmate(Team)
comment19.params=m
comment19.target=boolean\ isValidCastle(Move)
comment2.params=spot
comment2.target=void\ removePiece(OrderedPair)
comment20.params=m
comment20.target=void\ castle(Move)
comment21.params=m
comment21.target=boolean\ isValidEnPassant(Move)
comment22.params=m
comment22.target=void\ enPassant(Move)
comment23.params=
comment23.target=java.util.ArrayList\ getDeadPieces1()
comment24.params=
comment24.target=java.util.ArrayList\ getDeadPieces2()
comment25.params=t
comment25.target=java.util.ArrayList\ getAllPieces(Team)
comment26.params=spot
comment26.target=boolean\ canGetTaken(OrderedPair)
comment26.text=\r\n\ called\ during\ the\ computer's\ turn\ to\ check\ if\ a\ possible\ move\ could\ get\ the\ moving\ piece\ taken\r\n
comment27.params=t
comment27.target=int\ getBoardValue(Team)
comment27.text=\r\n\ Evaluates\ the\ value\ of\ a\ board\ for\ the\ Computer\ player\r\n
comment28.params=spot\ t
comment28.target=boolean\ hasPieceOfOtherTeam(OrderedPair,\ Team)
comment29.params=t
comment29.target=int\ getTeamValue(Team)
comment3.params=spot
comment3.target=boolean\ isEmpty(OrderedPair)
comment30.params=t
comment30.target=java.util.ArrayList\ getAllNonCheckMoves(Team)
comment31.params=
comment31.target=void\ resetAllHighlights1()
comment32.params=
comment32.target=void\ resetAllHighlights2()
comment33.params=
comment33.target=void\ resetAllHighlights3()
comment34.params=spot
comment34.target=void\ highlight1(OrderedPair)
comment35.params=spot
comment35.target=void\ highlight2(OrderedPair)
comment36.params=spot
comment36.target=void\ highlight3(OrderedPair)
comment37.params=spot
comment37.target=java.util.ArrayList\ getAllMovesFrom(OrderedPair)
comment38.params=t
comment38.target=boolean\ isInStalemate(Team)
comment39.params=other
comment39.target=boolean\ equals(Board)
comment4.params=
comment4.target=void\ spinBoard()
comment4.text=\r\n\ Spins\ the\ board\ for\ the\ other\ player\ to\ take\ a\ turn\r\n
comment40.params=
comment40.target=Move\ getLastMove()
comment5.params=spot
comment5.target=Team\ getPieceTeam(OrderedPair)
comment6.params=x\ y
comment6.target=Team\ getPieceTeam(int,\ int)
comment7.params=spot
comment7.target=Piece\ getPiece(OrderedPair)
comment8.params=x\ y
comment8.target=boolean\ isAKing(int,\ int)
comment9.params=
comment9.target=Team\ getWinner()
comment9.text=\r\n\ Not\ used\ anymore\ because\ of\ checkmate\ and\ stuff\r\n
numComments=41
